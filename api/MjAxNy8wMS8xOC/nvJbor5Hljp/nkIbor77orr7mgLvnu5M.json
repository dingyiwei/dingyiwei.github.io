{"title":"编译原理课设总结","date":"2017-01-17T16:00:00.000Z","date_formatted":{"ll":"Jan 18, 2017","L":"01/18/2017","MM-DD":"01-18"},"link":"2017/01/18/编译原理课设总结","tags":["编译原理"],"updated":"2020-05-28T19:45:01.889Z","content":"<h2 id=\"系统总体结构\">系统总体结构<a href=\"#系统总体结构\" title=\"系统总体结构\"></a></h2><p>本系统为搭建在 Qt 框架上的带有简易文本编辑器的 C- 语言编译器，仅生成中间代码，代码优化及目标代码生成未完成。</p>\n<ul><li>总控程序</li>\n<li>LR(1) 分析表</li>\n<li>代码高亮处理</li>\n<li>代码预处理</li>\n<li>词法分析器</li>\n<li>语义分析器</li>\n</ul><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th align=\"center\">模块</th><th align=\"center\">输入</th><th align=\"center\">输出</th><th align=\"center\">备注</th></tr>\n</thead><tbody><tr>\n<td align=\"center\">LR(1) 分析表生成器</td><td align=\"center\">文法（包括非终结符、终结符、产生式）</td><td align=\"center\">分析表</td><td align=\"center\">输入文法文件，输出分析表文件，用于语法分析、语义分析</td></tr>\n<tr>\n<td align=\"center\">代码预处理</td><td align=\"center\">源代码文件</td><td align=\"center\">消去代码注释</td><td align=\"center\">该模块从代码文件读入代码，消去注释后通过空格分词，传入词法分析器模块</td></tr>\n<tr>\n<td align=\"center\">词法分析器</td><td align=\"center\">去空格分词序列</td><td align=\"center\">由属性、类型、值的三元式组成的序列/词法分析错误列表</td><td align=\"center\">通过正则匹配，对去空格分词序列的每一个词进行关键字、符号、ID、NUM的匹配，同时检查词法错误</td></tr>\n<tr>\n<td align=\"center\">语义分析器</td><td align=\"center\">分析表、词法分析结果</td><td align=\"center\">三地址代码/语法分析、语义分析错误列表</td><td align=\"center\">读入分析表，通过语义分析和语法制导翻译对程序进行规约</td></tr>\n</tbody></table></div></div><h2 id=\"系统运行流程\">系统运行流程<a href=\"#系统运行流程\" title=\"系统运行流程\"></a></h2><ol><li>生成 LR(1) 分析表</li>\n<li>对代码预处理（消去注释）</li>\n<li>词法分析</li>\n<li>语义分析及中间代码生成</li>\n</ol><h2 id=\"系统实现\">系统实现<a href=\"#系统实现\" title=\"系统实现\"></a></h2><h3 id=\"代码编辑器\">代码编辑器<a href=\"#代码编辑器\" title=\"代码编辑器\"></a></h3><p>使用 Qt 的富文本框 <code>QPlainTextEdit</code>，没有显示行数。</p>\n<h3 id=\"预处理\">预处理<a href=\"#预处理\" title=\"预处理\"></a></h3><p>考虑到代码中行注释和块注释互相嵌套的情况，对代码的每一行进行如下步骤：</p>\n<ol><li>若存在 <code>/**/</code>，则消去该块注释；</li>\n<li>对余下的部分，若存在 <code>*/</code><ol><li>若上一行不是注释，则报错；</li>\n<li>若为注释则消去该部分；</li>\n</ol></li>\n<li>对余下部分，若上一行为注释，则消去该行；</li>\n<li>对余下部分，若存在 <code>//</code>，则消去 <code>//</code> 及其后面部分；</li>\n<li>若余下部分存在 <code>/*</code>，则将该行标记为注释，并消去 <code>/*</code> 及其后面部分。</li>\n</ol><h3 id=\"代码高亮\">代码高亮<a href=\"#代码高亮\" title=\"代码高亮\"></a></h3><p>继承 Qt 的高亮类 <code>QSyntaxHighlighter</code>，首先对关键词匹配，并着蓝色；接着对注释匹配，着绿色，相关步骤同<strong>预处理</strong>部分。</p>\n<h3 id=\"lr1-分析表生成\">LR(1) 分析表生成<a href=\"#lr1-分析表生成\" title=\"LR(1) 分析表生成\"></a></h3><h4 id=\"分析表生成\">分析表生成<a href=\"#分析表生成\" title=\"分析表生成\"></a></h4><ol><li>读入文法文件；</li>\n<li>通过文法生成所有终结符和非终结符的 <em>First</em> 集；</li>\n<li>拓展文法；</li>\n<li>生成第一个项目集，通过该项目集的可移进集合生成与之相关的项目集，由此递推出所有项目集，生成项目集族；</li>\n<li>根据项目集族和产生式生成分析表，写入文件。</li>\n</ol><h4 id=\"first-集生成\">First 集生成<a href=\"#first-集生成\" title=\"First 集生成\"></a></h4><ol><li>对每个产生式<ol><li>消去间接左递归，即将 $P_i \\rightarrow P_j\\gamma$ 的规则改写为 $P_i \\rightarrow \\delta_1\\gamma|\\delta_2\\gamma|…|\\delta_k\\gamma$；</li>\n<li>消除直接左递归，即将 $P\\rightarrow\\alpha_1|P\\alpha_2|…|P\\alpha_m|\\beta_1|\\beta_2|…|\\beta_n$ 的规则改写为 $P\\rightarrow\\beta_1 P’|\\beta_2 P’|…|\\beta_n P’$，其中 $P’\\rightarrow\\alpha_1 P’|\\alpha_2 P’|…|\\alpha_m P’|\\epsilon$；</li>\n</ol></li>\n<li>对每个符号 $X\\in V_T \\cup V_N$<ol><li>对每个终结符 $X\\in V_T$，$First(X)=X$；</li>\n<li>对每个非终结符 $X\\in V_N$，且有产生式 $X\\rightarrow\\alpha…$，则把 $\\alpha$ 加入 $First(X)$；若存在 $X\\rightarrow Y_1 Y_2 … Y_k$ 且 $Y_1,…,Y_{i-1}$ 都为非终结符且能推出 $\\epsilon$，则把 $First(Y_i)$ 中所有非空元素加入 $First(X)$。</li>\n</ol></li>\n</ol><h4 id=\"对一个式子求其-first-集\">对一个式子求其 First 集<a href=\"#对一个式子求其-first-集\" title=\"对一个式子求其 First 集\"></a></h4><ol><li>从第一个符号 $v$ 开始迭代；<ol><li>若 $v$ 为终结符或 #，将 $v$ 加入集合并返回；</li>\n<li>若 $v$ 为非终结符，将 $First(v)$ 中的非空符号加入集合；</li>\n</ol></li>\n<li>若所有符号均为非终结符，且都能推出空字，则将空字加入集合并返回。</li>\n</ol><h4 id=\"由若干初始项目生成一个项目集\">由若干初始项目生成一个项目集<a href=\"#由若干初始项目生成一个项目集\" title=\"由若干初始项目生成一个项目集\"></a></h4><ol><li>对初始项目，圆点后移一位；</li>\n<li>对所有项目，若圆点后为非终结符，则<ol><li>对非终结符后面的部分及搜索串求 First 集，即为产生的新项目的搜索串；</li>\n<li>加入以该非终结符产生的产生式，其搜索串为上述提到的新项目搜索串；</li>\n</ol></li>\n<li>项目集不再增大时停止迭代。</li>\n</ol><h4 id=\"项目集族生成\">项目集族生成<a href=\"#项目集族生成\" title=\"项目集族生成\"></a></h4><ol><li>将拓展文法后的第一条产生式生成项目集，作为初始项目集；</li>\n<li>扫描所有项目集，若项目集的转移集合为空，则检查该项目集中的所有项目，找出圆点没有到最后（即暂不可归约）、且圆点后为非终结符的项目；</li>\n<li>对找到的项目，以转移为分类生成新的项目集，并标注序号，加入项目集族；</li>\n<li>项目集族不再增大时迭代停止。</li>\n</ol><h4 id=\"通过项目集族生成分析表\">通过项目集族生成分析表<a href=\"#通过项目集族生成分析表\" title=\"通过项目集族生成分析表\"></a></h4><ol><li>将所有项目按照标注的序号排序；</li>\n<li>对每个项目 $I_k$：<ol><li>若项目 $[A\\rightarrow\\alpha\\cdot,a\\beta]\\in I_k$ 且 $I_k$ 可通过 $a$ 转移至 $I_j$，$a$ 为终结符，则 $table(k,a)=s_j$；</li>\n<li>若项目 $[A\\rightarrow\\alpha\\cdot,a]\\in I_k$，且 $A\\rightarrow\\alpha$ 为第 $j$ 条产生式，则 $table(k,a)=r_j$；</li>\n<li>若项目 $[S’\\rightarrow S\\cdot,#]\\in I_k$，则 $table(k,#)=accept$；</li>\n<li>若 $I_k$ 可通过 $A$ 转移至 $I_j$，$A$ 为非终结符，则 $table(k,A)=s_j$；</li>\n</ol></li>\n<li>对表中空白处填 error；</li>\n<li>输出至文件。</li>\n</ol>","prev":{"title":"进程的内存分配","link":"2017/03/03/进程的内存分配"},"next":{"title":"QMovie 等待动画","link":"2016/10/12/QMovie等待动画"},"plink":"http://yoursite.com/2017/01/18/编译原理课设总结/","toc":[{"id":"系统总体结构","title":"系统总体结构","index":"1"},{"id":"系统运行流程","title":"系统运行流程","index":"2"},{"id":"系统实现","title":"系统实现","index":"3","children":[{"id":"代码编辑器","title":"代码编辑器","index":"3.1"},{"id":"预处理","title":"预处理","index":"3.2"},{"id":"代码高亮","title":"代码高亮","index":"3.3"},{"id":"lr1-分析表生成","title":"LR(1) 分析表生成","index":"3.4"}]}]}